/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2020-12-03 18:45:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.web.leader;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class leader_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(10);
    _jspx_dependants.put("jar:file:/C:/Users/Huy%20Coc/Desktop/Work/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Work/WEB-INF/lib/spring-webmvc-4.3.13.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1511752906000L));
    _jspx_dependants.put("jar:file:/C:/Users/Huy%20Coc/Desktop/Work/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Work/WEB-INF/lib/sitemesh-2.4.2.jar!/META-INF/sitemesh-decorator.tld", Long.valueOf(1123653092000L));
    _jspx_dependants.put("/common/taglib.jsp", Long.valueOf(1606930686841L));
    _jspx_dependants.put("jar:file:/C:/Users/Huy%20Coc/Desktop/Work/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Work/WEB-INF/lib/spring-webmvc-4.3.13.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1511752906000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-3.2.8.RELEASE.jar", Long.valueOf(1595272391137L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1589905788850L));
    _jspx_dependants.put("jar:file:/C:/Users/Huy%20Coc/Desktop/Work/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Work/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153359882000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.13.RELEASE.jar", Long.valueOf(1593771291282L));
    _jspx_dependants.put("jar:file:/C:/Users/Huy%20Coc/Desktop/Work/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Work/WEB-INF/lib/spring-security-taglibs-3.2.8.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1437576592000L));
    _jspx_dependants.put("/WEB-INF/lib/sitemesh-2.4.2.jar", Long.valueOf(1589642272129L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write(' ');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Leader</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container content\" style=\"min-height:80vh; padding-top:85px;\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-9\">\r\n");
      out.write("                <div class=\"post-main\">\r\n");
      out.write("                    <div class=\"img-main\">\r\n");
      out.write("                        <img src=\"https://via.placeholder.com/220x250\" style=\"width: 100px;\" class=\"img-author\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"post\">\r\n");
      out.write("                        <h3 class=\"name-author\"><span>Trần Quốc Thắng</span> <a href=\"#\" class=\"xemchitiet\">Xem chi tiết</a></h3>\r\n");
      out.write("                        <p>In Django, fields with auto_now=True are not always updated correctly. A common practice to work around this is to override the save() method on the model, or to use a pre-save hook. However, this doesn't work when calling Model.objects.update()\r\n");
      out.write("                            since save() is not called on all instances in the queryset. A common way to fix this would be to alter the table, for example, in MySQL it may look li...</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"post-main\">\r\n");
      out.write("                    <div class=\"img-main\">\r\n");
      out.write("                        <img src=\"https://via.placeholder.com/220x250\" style=\"width: 100px;\" class=\"img-author\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"post\">\r\n");
      out.write("                        <h3 class=\"name-author\"><span>Trần Quốc Thắng</span> <a href=\"#\" class=\"xemchitiet\">Xem chi tiết</a></h3>\r\n");
      out.write("                        <p>In Django, fields with auto_now=True are not always updated correctly. A common practice to work around this is to override the save() method on the model, or to use a pre-save hook. However, this doesn't work when calling Model.objects.update()\r\n");
      out.write("                            since save() is not called on all instances in the queryset. A common way to fix this would be to alter the table, for example, in MySQL it may look li...</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <br>\r\n");
      out.write("                <div style=\"display: flex; justify-content: center;\">\r\n");
      out.write("                    <button id=\"myBtn\">Xem công việc</button>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <!-- The Modal -->\r\n");
      out.write("\r\n");
      out.write("                <div class=\"modal\" id=\"myModal\">\r\n");
      out.write("                    <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("                        <div class=\"modal-content\" style=\"width: 500px;\">\r\n");
      out.write("                            <div class=\"modal-header\">\r\n");
      out.write("                                <h4 class=\"modal-title\">Công việc <span class=\"close\">&times;</span></h4>\r\n");
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"container\"></div>\r\n");
      out.write("                            <div class=\"modal-body\" style=\"height: 300px;\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                    <li>Công việc</li>\r\n");
      out.write("                                 \r\n");
      out.write("                                </ul>\r\n");
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"modal-footer\">\r\n");
      out.write("                                <button id=\"myBtn2\">Xem nhân viên</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal\" id=\"myModal2\" data-backdrop=\"static\">\r\n");
      out.write("                    <div class=\"modal-dialog\">\r\n");
      out.write("                        <div class=\"modal-content\" style=\"margin-left: 130px; margin-top: 100px;\">\r\n");
      out.write("                            <div class=\"modal-header\">\r\n");
      out.write("                                <h4 class=\"modal-title\">Danh sách nhân viên\r\n");
      out.write("                                    <span class=\"close\">&times;</span></h4>\r\n");
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"container\"></div>\r\n");
      out.write("                            <div class=\"modal-body\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                    <li>Example</li>\r\n");
      out.write("                                    \r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <center>\r\n");
      out.write("                    <ul class=\"pagination\">\r\n");
      out.write("                        <li class=\"disabled\"><a href=\"#\">«</a></li>\r\n");
      out.write("                        <li class=\"active\"><a href=\"#\">1</a></li>\r\n");
      out.write("                        <li><a href=\"#\">2</a></li>\r\n");
      out.write("                        <li><a href=\"#\">3</a></li>\r\n");
      out.write("                        <li><a href=\"#\">4</a></li>\r\n");
      out.write("                        <li><a href=\"#\">»</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </center>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("        \r\n");
      out.write("<script>\r\n");
      out.write("    // Get the modal\r\n");
      out.write("    var modal = document.getElementById(\"myModal\");\r\n");
      out.write("    var modal2 = document.getElementById(\"myModal2\");\r\n");
      out.write("    // Get the button that opens the modal\r\n");
      out.write("    var btn = document.getElementById(\"myBtn\");\r\n");
      out.write("    var btn2 = document.getElementById(\"myBtn2\");\r\n");
      out.write("    // Get the <span> element that closes the modal\r\n");
      out.write("    var span = document.getElementsByClassName(\"close\")[0];\r\n");
      out.write("    var span2 = document.getElementsByClassName(\"close\")[1];\r\n");
      out.write("\r\n");
      out.write("    // When the user clicks the button, open the modal \r\n");
      out.write("    btn.onclick = function() {\r\n");
      out.write("        modal.style.display = \"block\";\r\n");
      out.write("    }\r\n");
      out.write("    btn2.onclick = function() {\r\n");
      out.write("        modal2.style.display = \"block\";\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // When the user clicks on <span> (x), close the modal\r\n");
      out.write("    span.onclick = function() {\r\n");
      out.write("        modal.style.display = \"none\";\r\n");
      out.write("    }\r\n");
      out.write("    span2.onclick = function() {\r\n");
      out.write("        modal2.style.display = \"none\";\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // When the user clicks anywhere outside of the modal, close it\r\n");
      out.write("    window.onclick = function(event) {\r\n");
      out.write("        if (event.target == modal) {\r\n");
      out.write("            modal.style.display = \"none\";\r\n");
      out.write("        } else if (event.target == modal2) {\r\n");
      out.write("            modal2.style.display = \"none\";\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
